# Kevin's i3 config
# -----------------
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Set some variables
# ------------------
# Windows key
set $super Mod4
# Alt key
set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:JetBrainsMono Nerd Font Mono 10

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.
# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Volume controls
# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty -o allow_remote_control=yes

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id dmenu_run

# change focus
bindsym $mod+h focus left
bindsym $mod+l focus right
# disabled since these keys are already used in vim for moving lines up/down
# bindsym $mod+j focus down
# bindsym $mod+k focus up

# alternatively, you can use the cursor keys:
# Note: disabled because I use these for the browser
# bindsym $mod+Left focus left
# bindsym $mod+Down focus down
# bindsym $mod+Up focus up
# bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+z split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1 terminal"
set $ws2 "2 browser"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+grave workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+grave move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# move focused workspace between monitors (ctrl mod , and .)
bindsym $mod+Ctrl+greater move workspace to output right
bindsym $mod+Ctrl+less move workspace to output left

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

# I will use alt+R in vim to toggle words. (Atom Habit)
bindsym $super+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  status_command i3status
  tray_output primary
}

# Set monitors
set $monitor1 HDMI-2 DisplayPort-11 DisplayPort-9 DisplayPort-7
set $monitor2 HDMI-1 DisplayPort-12 DisplayPort-10 DisplayPort-8

# Monitor 1
workspace 1 output $monitor1
workspace 3 output $monitor1
workspace 4 output $monitor1
workspace 5 output $monitor1
workspace 6 output $monitor1
# Monitor 2
workspace 2 output $monitor2
workspace 7 output $monitor2
workspace 8 output $monitor2
workspace 9 output $monitor2

# Extra sauce to fix monitor order issues
exec_always --no-startup-id xrandr --output HDMI-2 --auto --primary --left-of HDMI-1 &
exec_always --no-startup-id xrandr --output eDP --off && xrandr --output DisplayPort-11 --auto --primary --left-of DisplayPort-12 &
exec_always --no-startup-id xrandr --output eDP --off && xrandr --output DisplayPort-9 --auto --primary --left-of DisplayPort-10 &
exec_always --no-startup-id xrandr --output eDP --off && xrandr --output DisplayPort-7 --auto --primary --left-of DisplayPort-8 &

# Assign certain apps to certain workspaces
# Use this command to find out the class: xprop | grep WM_CLASS
assign [class="kitty"] $ws1
assign [class="Brave-browser"] $ws2
assign [class="Google-chrome"] $ws9
assign [class="Google-chrome"] $ws9
assign [class="firefox"] $ws2
assign [class="catalystau-element-desktop"] $ws3
assign [class="thunderbird"] $ws4
assign [class="KeePassXC"] $ws5
assign [class="ObinsKit"] $ws5
assign [class="obsidian"] $ws6

# Suspend/Sleep - similar to the lock screen but shift for more power.
bindsym $super+Shift+L exec systemctl suspend

# Lock screen
bindsym $super+L exec ~/i3lock.sh || i3lock xautolock -i ~/Pictures/lockscreen.png --color 000000

exec_always --no-startup-id feh --bg-scale ~/Pictures/bg.png

# Honestly, no idea why 1 is the default. This fixes clicking the scrollbar in browsers.
for_window [class="^.*"] border pixel 0


# (Windows Explorer equivalent) Open nautilus in a floating window using super+E
for_window [class="Org.gnome.Nautilus"] floating enable ; [class="Org.gnome.Nautilus"] resize set 1200 800 ; [class="Org.gnome.Nautilus"] move position center

# Take a quick note using mod+n
for_window [title="take_note"] floating enable ; [title="take_note"] resize set 1200 800 ; [title="take_note"] move position center
bindsym $mod+n exec kitty -T take_note -e $HOME/bin/take-note ; workspace number $ws1 ;

# This was annoying, so turning it off.
focus_follows_mouse no

# Toggle Work VPN
bindsym $super+P exec nmcli con up 5c54ab5a-c640-43d7-8e33-ff4d54257bad || nmcli con down 5c54ab5a-c640-43d7-8e33-ff4d54257bad

# Picom - Compositor (for transparent bg - #ricing)
exec_always --no-startup-id picom -b -f

# Screenshot using flameshot
bindsym Ctrl+Shift+4 exec flameshot gui

bindsym $mod+Ctrl+button2 nop

# Don't steal focus please (I might be opening multiple links with my mouse!)
focus_on_window_activation none

# FOUND YOU. Turning off to keep kitty terminal ctrl+alt behaviour for block selection.
tiling_drag off

# "Super" launcher
bindsym $super+G exec xdg-open https://google.com ; workspace number $ws2 ;
bindsym $super+C exec CatalystElementDesktop || catalystau-element-desktop
bindsym $super+E exec nautilus ~
bindsym $super+M exec xdg-open https://music.youtube.com ; workspace number $ws2 ;
# bindsym $super+8 exec flatpak run org.telegram.desktop ; workspace number $ws8 ;
bindsym $super+8 exec signal-desktop ; workspace number $ws8 ;
bindsym $super+9 exec google-chrome https://teams.microsoft.com ; workspace number $ws9 ;
bindsym $super+T exec thunderbird
bindsym $super+K exec keepassxc
bindsym $super+O exec obinskit
bindsym $mod+Shift+N exec obsidian ;
bindsym $super+U exec xdg-open https://youtube.com ; workspace number $ws2 ;

# Toggle visual notifications (i.e. do not disturb mode)
bindsym $super+Shift+N exec dunstctl set-paused toggle && notify-send ToggleNotifications "`date`";
# if [[ $(dunstctl is-paused) == "true" ]]; then echo "is paused"; else echo "not paused"; fi

# Failsafe - if I can't see anything, I want to see everything! Might help debug some sleep issues.
bindsym $super+$mod+C exec xrandr --auto;

# Wall(paper) changer - swaps the current wallpaper randomly (easier than iterating for now).
bindsym $super+B exec "$HOME/.config/i3/wall-switcher" ; exec feh --bg-scale $HOME/Pictures/bg.png ;

# TKSS
# for_window [title="tkss"] floating enable ; [floating] resize set 1200 800 ; [floating] move position center
# bindsym $mod+t exec kitty -T tkss -e $HOME/scripts/tkss && sleep 2

# Quick way to help dev environment until I think of a better way
# Switch to browser, refresh (and hit enter in case a warning shows up) then returns back to code workspace
# Not sure what alt-M does in VIM so using it for now
bindsym $mod+M workspace number $ws2 ; exec sleep 0.1 && xdotool key 'F5' && sleep 0.1 && xdotool key 'space' && xdotool key 'alt+1'

bindsym $mod+Shift+V exec sh -c 'sleep 0.5 && xdotool type "$(xclip -o -selection clipboard)"'

# gaps outer 16px

# Media player controls (doesn't really work.. maybe it's an OS/i3 limitation)
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Toggle audio output devices
bindsym $mod+Shift+M exec ~/.config/i3/audio-toggle
